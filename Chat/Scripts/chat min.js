var usersOnlineViewModel = function () { var e = ko.observableArray(), s = ko.observable(!0); return { usersOnline: e, isMusicEnabled: s } }(); ko.applyBindings(usersOnlineViewModel); var id; $("#message").css("lineHeight", "100%"); var msg = function (e, s) { this.name = e, this.msg = s }, frndsList = ["varsha.mathukumalli", "karthik.bandi", "shashi.dadi", "saikiriti.sambangi", "raghu.gudapati", "saikumar.vanam", "jagadish.chigurupati", "shiva.potharaju", "niteesha.jupally", "sreeja.banswada", "srinivasa.yella", "mallesham.musuni", "ajay.bejjam"], messages = []; null != JSON.parse(localStorage.getItem("msgs")) && (messages = JSON.parse(localStorage.getItem("msgs"))), $(function () { var e = $.connection.myHub; e.client.broadcastMessage = function (e, n, t, i) { if ($("#displayname").val() == t) { var a = $("<div />").text(e).html(); $("<div />").text(n).html(); usersOnlineViewModel.isMusicEnabled() && i !== $.connection.hub.id && s.play(), $("#messageList").scrollTo($("#messageList")[0].scrollHeight), messages.push(new msg(e, n)), localStorage.setItem("msgs", JSON.stringify(messages)), i === $.connection.hub.id ? $("#discussion").append('<li class="bubbler" style="text-align:left;list-style:none;padding:10px;left:48%;position:relative"><strong>' + a + "</strong>:&nbsp;&nbsp;" + n + "</li><br/>") : $("#discussion").append('<li class="bubblel" style="text-align:left;list-style:none;padding:10px;left:auto;position:relative"><strong>' + a + "</strong>:&nbsp;&nbsp;" + n + "</li><br/>") } }; var s = document.createElement("audio"); s.setAttribute("src", "/Chat/Content/sound.wav"), e.client.popup = function () { alert("you have already opened in another tab or browser please go to that !!") }, e.client.Connected = function (e) { $("#UsersOnline").append('<li><span style="color:green">*</span><strong>' + e + "</strong></li>") }, e.client.disconnected = function (e) { $.each(usersOnlineViewModel.usersOnline(), function (s, n) { n.machineName.split("\\")[1] == e && usersOnlineViewModel.usersOnline.splice(s, 1) }), $.each($("#UsersOnline").find("strong"), function (s, n) { n.innerText == e && n.parentNode.remove() }) }, $("#message").keydown(function (s) { 13 != s.keyCode || s.shiftKey || (s.preventDefault(), $("#message").scrollTo($("#message")[0].scrollHeight), "" != $("#message").html() && e.server.send($("#displayname").val(), $("#message").html(), $("#reciever").val(), $.connection.hub.id), $("#message").html(""), $("#message").focus()) }), $(".image").click(function (e) { var s = e.currentTarget.outerHTML; $("#message").append(s) }), $("#emoticons").click(function () { "none" == $("#smileys").css("display") ? ($("#smileys").toggle("show"), $("#messageList").height("70%")) : ($("#smileys").toggle("show"), $("#messageList").height("90%")) }), e.client.getUsers = function (e) { alert(e) }, e.client.generateUsers = function (e) { -1 == $.inArray(e.machineName.split("\\")[1], $.map(usersOnlineViewModel.usersOnline(), function (e) { return e.machineName.split("\\")[1] })) && usersOnlineViewModel.usersOnline.push(e) }, e.client.generateUsersOnStart = function (e) { if (e) for (var s in e) usersOnlineViewModel.usersOnline.push(e[s]) }, $("#music").click(function () { usersOnlineViewModel.isMusicEnabled() ? ($("#music").attr("src", "/Chat/Content/music_off.png"), usersOnlineViewModel.isMusicEnabled(!1)) : ($("#music").attr("src", "/Chat/Content/music-on.png"), usersOnlineViewModel.isMusicEnabled(!0)) }), $("#displayname").val(""), $("#message").focus(), $.connection.hub.start().done(function () { $("#id").val($.connection.hub.id), e.server.setUsers($.connection.hub.id, $("#displayname").val()), e.server.setUsers($.connection.hub.id, $("#displayname").val()), $("#sendmessage").click(function () { "" != document.getElementById("message").innerHTML && e.server.send($("#displayname").val(), document.getElementById("message").innerHTML, $("#reciever").val(), $.connection.hub.id), $("#message").html(""), $("#message").focus() }) }) }), document.onreadystatechange = function () { var e = document.readyState; "interactive" == e ? document.getElementById("main").style.visibility = "hidden" : "complete" == e && setTimeout(function () { document.getElementById("interactive"), document.getElementById("load").style.visibility = "hidden", document.getElementById("main").style.visibility = "visible" }, 1e3) }, $.fn.scrollTo = function (e, s, n) { "function" == typeof s && 2 == arguments.length && (n = s, s = e); var t = $.extend({ scrollTarget: e, offsetTop: 50, duration: 500, easing: "swing" }, s); return this.each(function () { var e = $(this), s = "number" == typeof t.scrollTarget ? t.scrollTarget : $(t.scrollTarget), i = "number" == typeof s ? s : s.offset().top + e.scrollTop() - parseInt(t.offsetTop); e.animate({ scrollTop: i }, parseInt(t.duration), t.easing, function () { "function" == typeof n && n.call(this) }) }) }; var getHistory = function () { if ("none" == $("#msgHistory").css("display")) { $("#msgHistoryList").empty(); var e = JSON.parse(localStorage.getItem("msgs")); if (null == e) return void alert("No history found!"); $.each(e, function (e, s) { $("#msgHistoryList").append("<li><strong>" + s.name + ":</strong>" + s.msg + "</li>") }), $("#msgHistory").toggle("show"), $("#viewHistory").text("Go Back") } else $("#msgHistory").toggle("show"), $("#viewHistory").text("View History"); $("#msgHistory").css("overflow-y", "scroll") }, clearHistory = function () { localStorage.removeItem("msgs"), messages = [], $("#msgHistoryList").empty() };